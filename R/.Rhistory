library(devtools)
install_github("Xiaoqizheng/PREDE")
install_github("Xiaoqizheng/PREDE")
install_github("Xiaoqizheng/PREDE")
library("PREDE")
## load data of lung cancer cell lines and select a number of cell lines as references
data(lung_exp)
W <- lung_exp[,1:6]
head(W)
bulk <- generate_bulk(W,nSample =100,csd = 0.1)
## select top features in terms of coefficient of variation (cv)
feat <- select_feature(mat = bulk$Y,method = "cv",nmarker = 1000,startn = 0)
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W=NULL,W1=W[feat,1:4],maxK = 10)
plot(5:10,OptimalK$AIC, col="red",xlab="Number of total cell types",
ylab = "AIC",lwd = 1,type = 'b',main = "AIC")
abline(v = 6,lwd = 2,lty = 2,col = "gray")
W = 2^W
bulk <- generate_bulk(W,nSample =100,csd = 0.1)
## select top features in terms of coefficient of variation (cv)
feat <- select_feature(mat = bulk$Y,method = "cv",nmarker = 1000,startn = 0)
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W=NULL,W1=W[feat,1:4],maxK = 10)
plot(5:10,OptimalK$AIC, col="red",xlab="Number of total cell types",
ylab = "AIC",lwd = 1,type = 'b',main = "AIC")
abline(v = 6,lwd = 2,lty = 2,col = "gray")
GetCelltypeNum <- function(Y,W1 = NULL,maxK = 50){
W1 = as.matrix(W1)
AIC = c()
for (k in (ncol(W1)+1):maxK){
PR = PREDE(Y,W = NULL,W1 = W1,type = "GE",k,iters = 100,rssDiffStop=1e-4)
W.pred = PR$W
H.pred = PR$H
if (max(W.pred) > 100){ ## take log2, to make sure that Y and W.pred are Gaussion distributed
W.pred = log2(W.pred + 1)
Y = log2(Y + 1)
}
rss = norm(Y - W.pred %*% H.pred,type = "F")^2
nSamples = ncol(Y)*nrow(Y) ### sample size * number of gene
nParam = k*(nrow(Y)+ncol(Y)) - nrow(W1)*ncol(W1) ### total number of parameters
aic = nSamples*log(rss/nSamples)+ 2*nParam + (2*nParam*(nParam+1))/(nSamples-nParam-1)
AIC = rbind(AIC,aic)
}
##select the optimal number of cell types
K = which.min(AIC)+ncol(W1)
out = list(AIC=AIC,K=K)
out$AIC = AIC
out$K = K
return(out)
}
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W=NULL,W1=W[feat,1:4],maxK = 10)
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W1=W[feat,1:4],maxK = 10)
W = 2^W
## load data of lung cancer cell lines and select a number of cell lines as references
data(lung_exp)
W <- lung_exp[,1:6]
head(W)
W = 2^W
bulk <- generate_bulk(W,nSample =100,csd = 0.1)
## select top features in terms of coefficient of variation (cv)
feat <- select_feature(mat = bulk$Y,method = "cv",nmarker = 1000,startn = 0)
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W1=W[feat,1:4],maxK = 10)
Q
GetCelltypeNum <- function(Y,W1 = NULL,maxK = 50){
W1 = as.matrix(W1)
AIC = c()
for (k in (ncol(W1)+1):maxK){
PR = PREDE(Y,W = NULL,W1 = W1,type = "GE",k,iters = 100,rssDiffStop=1e-4)
W.pred = PR$W
H.pred = PR$H
if (max(W.pred) > 100){ ## take log2, to make sure that Y and W.pred are Gaussion distributed
W.pred = log2(W.pred + 1)
lgY = log2(Y + 1)
rss = norm(lgY - W.pred %*% H.pred,type = "F")^2
nSamples = ncol(Y)*nrow(Y) ### sample size * number of gene
nParam = k*(nrow(Y)+ncol(Y)) - nrow(W1)*ncol(W1) ### total number of parameters
aic = nSamples*log(rss/nSamples)+ 2*nParam + (2*nParam*(nParam+1))/(nSamples-nParam-1)
AIC = rbind(AIC,aic)
} else {
rss = norm(Y - W.pred %*% H.pred,type = "F")^2
nSamples = ncol(Y)*nrow(Y) ### sample size * number of gene
nParam = k*(nrow(Y)+ncol(Y)) - nrow(W1)*ncol(W1) ### total number of parameters
aic = nSamples*log(rss/nSamples)+ 2*nParam + (2*nParam*(nParam+1))/(nSamples-nParam-1)
AIC = rbind(AIC,aic)
}
}
##select the optimal number of cell types
K = which.min(AIC)+ncol(W1)
out = list(AIC=AIC,K=K)
out$AIC = AIC
out$K = K
return(out)
}
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W1=W[feat,1:4],maxK = 10)
plot(5:10,OptimalK$AIC, col="red",xlab="Number of total cell types",
ylab = "AIC",lwd = 1,type = 'b',main = "AIC")
abline(v = 6,lwd = 2,lty = 2,col = "gray")
#################################################################################
## select optimal number of total cell types by computing AIC value
#################################################################################
GetCelltypeNum <- function(Y,W1 = NULL,maxK = 50){
W1 = as.matrix(W1)
AIC = c()
for (k in (ncol(W1)+1):maxK){
PR = PREDE(Y,W = NULL,W1 = W1,type = "GE",k,iters = 100,rssDiffStop=1e-4)
W.pred = PR$W
H.pred = PR$H
browser()
if (max(W.pred) > 100){ ## take log2, to make sure that Y and W.pred are Gaussion distributed
W.pred = log2(W.pred + 1)
lgY = log2(Y + 1)
rss = norm(lgY - W.pred %*% H.pred,type = "F")^2
nSamples = ncol(Y)*nrow(Y) ### sample size * number of gene
nParam = k*(nrow(Y)+ncol(Y)) - nrow(W1)*ncol(W1) ### total number of parameters
aic = nSamples*log(rss/nSamples)+ 2*nParam + (2*nParam*(nParam+1))/(nSamples-nParam-1)
AIC = rbind(AIC,aic)
} else {
rss = norm(Y - W.pred %*% H.pred,type = "F")^2
nSamples = ncol(Y)*nrow(Y) ### sample size * number of gene
nParam = k*(nrow(Y)+ncol(Y)) - nrow(W1)*ncol(W1) ### total number of parameters
aic = nSamples*log(rss/nSamples)+ 2*nParam + (2*nParam*(nParam+1))/(nSamples-nParam-1)
AIC = rbind(AIC,aic)
}
}
##select the optimal number of cell types
K = which.min(AIC)+ncol(W1)
out = list(AIC=AIC,K=K)
out$AIC = AIC
out$K = K
return(out)
}
## determine the total number of cell types by AIC, by specifying only partial reference W1
OptimalK <- GetCelltypeNum(bulk$Y[feat,],W1=W[feat,1:4],maxK = 10)
View(W.pred)
View(W1)
View(W.pred)
View(W1)
log2(W1)
W.pred = log2(W.pred + 1)
lgY = log2(Y + 1)
head(lgY)
head(W.pred)
rss = norm(lgY - W.pred %*% H.pred,type = "F")^2
rss
